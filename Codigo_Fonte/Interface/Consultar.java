/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Competicao.Competicao;
import Competicao.Jogo;
import Competicao.Torneio;
import Gestao.Equipa;
import Gestao.Escola;
import Gestao.Jogador;
import java.util.Collection;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rui Mendes
 */
public class Consultar extends javax.swing.JFrame implements Observer {

    private AssociacaoEscolasFutebol a;
    private Map<String, Collection<Jogo>> calendario;

    /**
     * Creates new form Consultar
     */
    public Consultar(AssociacaoEscolasFutebol a) {
        this.a = a;
        this.a.addObserver(this);
        initComponents();

        /* Verifica o tipo de utilizador
         if("Visitante".equals(this.a.getTipoUtilizador()) || 
         "Juíz".equals(this.a.getTipoUtilizador())){
         AdicionarJogador_Button.setEnabled(false);
         RemoverJogador_Button.setEnabled(false);
         } */
        //Alinha as coluna "Equipa Casa" à direita
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        Jornadas_Table.getColumn("Equipa Casa").setCellRenderer(rightRenderer);
        //Alinha a coluna "vs" ao centro
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        Jornadas_Table.getColumn("vs").setCellRenderer(centerRenderer);

        //Atualiza as combobox da tab Equipa com a respectiva informacao
        for (Escola escola : a.getDAOEscola().values()) {
            Escola_ComboBox.addItem(escola.getNome());
        }

        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Consultar_Label = new javax.swing.JLabel();
        TabbedPane = new javax.swing.JTabbedPane();
        Equipa_Panel = new javax.swing.JPanel();
        SelecionarEquipa_Panel = new javax.swing.JPanel();
        Escola_ComboBox = new javax.swing.JComboBox();
        Escola_Label = new javax.swing.JLabel();
        Escalao_Label = new javax.swing.JLabel();
        Escalao_ComboBox = new javax.swing.JComboBox();
        Equipa_ComboBox = new javax.swing.JComboBox();
        Equipa_Label = new javax.swing.JLabel();
        DadosJogadores_Table = new javax.swing.JScrollPane();
        Jogadores_Table = new javax.swing.JTable();
        Procurar_Button = new javax.swing.JButton();
        Campeonato_Panel = new javax.swing.JPanel();
        Escalao_Label2 = new javax.swing.JLabel();
        Jornada_Label2 = new javax.swing.JLabel();
        Jornada_ComboBox2 = new javax.swing.JComboBox();
        Escalao_ComboBox2 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        Classificaçao_Table2 = new javax.swing.JTable();
        Classificaçao_Label2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MelhoresMarcadores_Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Jornadas_Table = new javax.swing.JTable();
        procura = new javax.swing.JButton();
        Torneio_Panel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Escalao_ComboBox3 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        Torneio_ComboBox = new javax.swing.JComboBox();
        ConsultarTorneio_Button = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        MelhoresMarcadores_Table1 = new javax.swing.JTable();
        VoltarMenuPrincipal_Panel = new javax.swing.JPanel();
        VoltarMenuPrincipal_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Associação de Escolas de Futebol - Época 13/14");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Consultar_Label.setFont(new java.awt.Font("Trebuchet MS", 0, 20)); // NOI18N
        Consultar_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Consultar_Label.setText("Consultar:");

        TabbedPane.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N

        SelecionarEquipa_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecionar Equipa"));

        Escola_ComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Escola_ComboBoxItemStateChanged(evt);
            }
        });

        Escola_Label.setText("Escola:");

        Escalao_Label.setText("Escalão:");

        Escalao_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PreEscolaA", "PreEscolaB", "MinisA", "MinisB", "EscolaA", "EscolaB", "InfantisA", "InfantisB", "IniciadosA", "IniciadosB" }));
        Escalao_ComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Escalao_ComboBoxItemStateChanged(evt);
            }
        });

        Equipa_ComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Equipa_ComboBoxMouseExited(evt);
            }
        });

        Equipa_Label.setText("Equipa:");

        javax.swing.GroupLayout SelecionarEquipa_PanelLayout = new javax.swing.GroupLayout(SelecionarEquipa_Panel);
        SelecionarEquipa_Panel.setLayout(SelecionarEquipa_PanelLayout);
        SelecionarEquipa_PanelLayout.setHorizontalGroup(
            SelecionarEquipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelecionarEquipa_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SelecionarEquipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Escola_Label)
                    .addComponent(Escalao_Label, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Equipa_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SelecionarEquipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Escalao_ComboBox, 0, 182, Short.MAX_VALUE)
                    .addComponent(Escola_ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Equipa_ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        SelecionarEquipa_PanelLayout.setVerticalGroup(
            SelecionarEquipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelecionarEquipa_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SelecionarEquipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Escola_Label)
                    .addComponent(Escola_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SelecionarEquipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Escalao_Label)
                    .addComponent(Escalao_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SelecionarEquipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Equipa_Label)
                    .addComponent(Equipa_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Jogadores_Table.setAutoCreateRowSorter(true);
        Jogadores_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Jogador", "Ano"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Jogadores_Table.getTableHeader().setReorderingAllowed(false);
        DadosJogadores_Table.setViewportView(Jogadores_Table);

        Procurar_Button.setText("Procurar");
        Procurar_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Procurar_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Equipa_PanelLayout = new javax.swing.GroupLayout(Equipa_Panel);
        Equipa_Panel.setLayout(Equipa_PanelLayout);
        Equipa_PanelLayout.setHorizontalGroup(
            Equipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Equipa_PanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(Equipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DadosJogadores_Table, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Equipa_PanelLayout.createSequentialGroup()
                        .addComponent(SelecionarEquipa_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Procurar_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );
        Equipa_PanelLayout.setVerticalGroup(
            Equipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Equipa_PanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(Equipa_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SelecionarEquipa_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Procurar_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DadosJogadores_Table, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabbedPane.addTab("Equipa", Equipa_Panel);

        Escalao_Label2.setText("Escalão:");

        Jornada_Label2.setText("Jornada:");

        Jornada_ComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Jornada_ComboBox2ItemStateChanged(evt);
            }
        });

        Escalao_ComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PreEscolaA", "PreEscolaB", "EscolaA", "EscolaB", "InfantisA", "InfantisB", "IniciadosA", "IniciadosB", "MinisA", "MinisB" }));
        Escalao_ComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Escalao_ComboBox2ItemStateChanged(evt);
            }
        });
        Escalao_ComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Escalao_ComboBox2ActionPerformed(evt);
            }
        });

        Classificaçao_Table2.setAutoCreateRowSorter(true);
        Classificaçao_Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Equipa", "Golos", "Pontos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Classificaçao_Table2.setFillsViewportHeight(true);
        Classificaçao_Table2.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Classificaçao_Table2);
        if (Classificaçao_Table2.getColumnModel().getColumnCount() > 0) {
            Classificaçao_Table2.getColumnModel().getColumn(0).setPreferredWidth(100);
            Classificaçao_Table2.getColumnModel().getColumn(1).setPreferredWidth(50);
        }

        Classificaçao_Label2.setText("Classificação:");

        MelhoresMarcadores_Table.setAutoCreateRowSorter(true);
        MelhoresMarcadores_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Jogador", "Equipa", "Golos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MelhoresMarcadores_Table.setFillsViewportHeight(true);
        MelhoresMarcadores_Table.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(MelhoresMarcadores_Table);
        if (MelhoresMarcadores_Table.getColumnModel().getColumnCount() > 0) {
            MelhoresMarcadores_Table.getColumnModel().getColumn(0).setPreferredWidth(100);
            MelhoresMarcadores_Table.getColumnModel().getColumn(2).setPreferredWidth(50);
        }

        jLabel1.setText("Melhores Marcadores:");

        Jornadas_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Equipa Casa", "vs", "Equipa Fora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Jornadas_Table.setFillsViewportHeight(true);
        Jornadas_Table.setFocusable(false);
        Jornadas_Table.setShowVerticalLines(false);
        Jornadas_Table.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(Jornadas_Table);
        if (Jornadas_Table.getColumnModel().getColumnCount() > 0) {
            Jornadas_Table.getColumnModel().getColumn(0).setResizable(false);
            Jornadas_Table.getColumnModel().getColumn(0).setPreferredWidth(100);
            Jornadas_Table.getColumnModel().getColumn(1).setResizable(false);
            Jornadas_Table.getColumnModel().getColumn(1).setPreferredWidth(50);
            Jornadas_Table.getColumnModel().getColumn(2).setResizable(false);
            Jornadas_Table.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        procura.setText("Procurar");
        procura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procuraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Campeonato_PanelLayout = new javax.swing.GroupLayout(Campeonato_Panel);
        Campeonato_Panel.setLayout(Campeonato_PanelLayout);
        Campeonato_PanelLayout.setHorizontalGroup(
            Campeonato_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Campeonato_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Campeonato_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Campeonato_PanelLayout.createSequentialGroup()
                        .addComponent(Classificaçao_Label2)
                        .addGap(154, 154, 154))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Campeonato_PanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(Campeonato_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Campeonato_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(Campeonato_PanelLayout.createSequentialGroup()
                        .addComponent(Jornada_Label2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Jornada_ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)))
                .addGap(20, 20, 20))
            .addGroup(Campeonato_PanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Escalao_Label2)
                .addGap(7, 7, 7)
                .addComponent(Escalao_ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(procura)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Campeonato_PanelLayout.setVerticalGroup(
            Campeonato_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Campeonato_PanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(Campeonato_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Escalao_ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Escalao_Label2)
                    .addComponent(procura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Campeonato_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Classificaçao_Label2)
                    .addComponent(jLabel1)
                    .addComponent(Jornada_Label2)
                    .addComponent(Jornada_ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Campeonato_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        TabbedPane.addTab("Campeonato", Campeonato_Panel);

        jLabel2.setText("Escalão:");

        Escalao_ComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PreEscolaA", "PreEscolaB", "MinisA", "MinisB", "EscolaA", "EscolaB", "InfantisA", "InfantisB", "IniciadosA", "IniciadosB" }));
        Escalao_ComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Escalao_ComboBox3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Torneio:");

        Torneio_ComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Torneio_ComboBoxItemStateChanged(evt);
            }
        });

        ConsultarTorneio_Button.setText("Consultar Tabela do Torneio");
        ConsultarTorneio_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarTorneio_ButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Melhores Marcadores:");

        MelhoresMarcadores_Table1.setAutoCreateRowSorter(true);
        MelhoresMarcadores_Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Jogador", "Equipa", "Golos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MelhoresMarcadores_Table1.setFillsViewportHeight(true);
        MelhoresMarcadores_Table1.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(MelhoresMarcadores_Table1);
        if (MelhoresMarcadores_Table1.getColumnModel().getColumnCount() > 0) {
            MelhoresMarcadores_Table1.getColumnModel().getColumn(0).setPreferredWidth(100);
            MelhoresMarcadores_Table1.getColumnModel().getColumn(2).setPreferredWidth(50);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout Torneio_PanelLayout = new javax.swing.GroupLayout(Torneio_Panel);
        Torneio_Panel.setLayout(Torneio_PanelLayout);
        Torneio_PanelLayout.setHorizontalGroup(
            Torneio_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Torneio_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Torneio_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Torneio_PanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Escalao_ComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Torneio_PanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Torneio_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Torneio_ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ConsultarTorneio_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(56, 56, 56)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );
        Torneio_PanelLayout.setVerticalGroup(
            Torneio_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Torneio_PanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(Torneio_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Escalao_ComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Torneio_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Torneio_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ConsultarTorneio_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
            .addGroup(Torneio_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabbedPane.addTab("Torneio", Torneio_Panel);

        VoltarMenuPrincipal_Button.setText("Voltar Menu Anterior");
        VoltarMenuPrincipal_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarMenuPrincipal_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VoltarMenuPrincipal_PanelLayout = new javax.swing.GroupLayout(VoltarMenuPrincipal_Panel);
        VoltarMenuPrincipal_Panel.setLayout(VoltarMenuPrincipal_PanelLayout);
        VoltarMenuPrincipal_PanelLayout.setHorizontalGroup(
            VoltarMenuPrincipal_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoltarMenuPrincipal_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VoltarMenuPrincipal_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        VoltarMenuPrincipal_PanelLayout.setVerticalGroup(
            VoltarMenuPrincipal_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoltarMenuPrincipal_PanelLayout.createSequentialGroup()
                .addComponent(VoltarMenuPrincipal_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(VoltarMenuPrincipal_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Consultar_Label)
                    .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(Consultar_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VoltarMenuPrincipal_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VoltarMenuPrincipal_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarMenuPrincipal_ButtonActionPerformed
        if ("Visitante".equals(a.getTipoUtilizador())) {
            new Visitante(a);
        }
        if ("Gestor".equals(a.getTipoUtilizador())) {
            new Gestor(a);
        }
        if ("Juíz".equals(a.getTipoUtilizador())) {
            new Juiz(a);
        }
        this.dispose();

    }//GEN-LAST:event_VoltarMenuPrincipal_ButtonActionPerformed

    private void Escola_ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Escola_ComboBoxItemStateChanged
        Equipa_ComboBox.removeAllItems();
        Escola escola = a.getDAOEscola().get(Escola_ComboBox.getSelectedItem().toString());
        if (escola != null) {
            for (Equipa equipa : escola.getEquipas(Escola_ComboBox.getSelectedItem().toString(), "Escalao." + Escalao_ComboBox.getSelectedItem().toString())) {
                Equipa_ComboBox.addItem(equipa.getNome());
            }
        }

    }//GEN-LAST:event_Escola_ComboBoxItemStateChanged

    private void Escalao_ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Escalao_ComboBoxItemStateChanged
        Equipa_ComboBox.removeAllItems();
        String escalao = "Escalao.";
        Escola escola = a.getDAOEscola().get(Escola_ComboBox.getSelectedItem().toString());
        if (escola != null) {
            for (Equipa equipa : escola.getEquipas(Escola_ComboBox.getSelectedItem().toString(), escalao + Escalao_ComboBox.getSelectedItem().toString())) {
                Equipa_ComboBox.addItem(equipa.getNome());
            }
        }
    }//GEN-LAST:event_Escalao_ComboBoxItemStateChanged

    private void Procurar_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Procurar_ButtonActionPerformed
        // TODO add your handling code here:\
        clearTable(Jogadores_Table);
        int i = 0;
        Escola escola = a.getDAOEscola().get(Escola_ComboBox.getSelectedItem().toString());
        if (escola != null) {
            Collection<Jogador> jog = escola.getJogadores(Escola_ComboBox.getSelectedItem().toString() + "-" + Equipa_ComboBox.getSelectedItem().toString());
            if (jog != null) {
                for (Jogador b : jog) {
                    Jogadores_Table.setValueAt(b.getNome(), i, 0);
                    Jogadores_Table.setValueAt(b.getDataNascimento(), i, 1);
                    i++;
                }
            }
        }

    }//GEN-LAST:event_Procurar_ButtonActionPerformed

    private void Equipa_ComboBoxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Equipa_ComboBoxMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_Equipa_ComboBoxMouseExited

    private void Escalao_ComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Escalao_ComboBox2ActionPerformed

    }//GEN-LAST:event_Escalao_ComboBox2ActionPerformed

    private void procuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procuraActionPerformed
        // TODO add your handling code here:

        calendario = a.getCalendarioCompeticao("Escalao." + Escalao_ComboBox2.getSelectedItem().toString());
        int i = 0;
        Collection<String> classi = a.getClassificacao("Escalao." + Escalao_ComboBox2.getSelectedItem().toString());
        if (classi != null) {
            for (String clas : classi) {
                String[] c = clas.split("_");
                Classificaçao_Table2.setValueAt(c[0], i, 0);
                Classificaçao_Table2.setValueAt(c[2], i, 1);
                Classificaçao_Table2.setValueAt(c[1], i, 2);
                i++;
            }
        }
        i = 0;
        Collection<String> marcador = a.getMelhorMarcadores("Escalao." + Escalao_ComboBox2.getSelectedItem().toString());
        if (marcador != null) {
            for (String b : marcador) {
                String[] c = b.split("_");
                MelhoresMarcadores_Table.setValueAt(c[0], i, 0);
                MelhoresMarcadores_Table.setValueAt(c[1], i, 1);
                MelhoresMarcadores_Table.setValueAt(c[2], i, 2);
                i++;
            }
        }
        if (calendario != null) {
            for (int j = 0; j < calendario.size(); j++) {
                Jornada_ComboBox2.addItem(Integer.toString(j + 1));
            }
        }
        //System.out.println( MelhoresMarcadores_Table.getValueAt(0,0));
    }//GEN-LAST:event_procuraActionPerformed

    private void Jornada_ComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Jornada_ComboBox2ItemStateChanged
        // TODO add your handling code here:
        int i = 0;
        if (Jornada_ComboBox2.getSelectedIndex() > -1) {
            int p = Integer.parseInt(Jornada_ComboBox2.getSelectedItem().toString()) - 1;
            Collection<Jogo> jogos = calendario.get("Escalao." + Escalao_ComboBox2.getSelectedItem().toString() + Integer.toString(p));
            for (Jogo j : jogos) {
                Jornadas_Table.setValueAt(j.getEquipa1(), i, 0);
                Jornadas_Table.setValueAt(j.getGolo1() + " x " + j.getGolo2(), i, 1);
                Jornadas_Table.setValueAt(j.getEquipa2(), i, 2);
                i++;
            }
        }
    }//GEN-LAST:event_Jornada_ComboBox2ItemStateChanged

    private void Equipa_ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Equipa_ComboBoxItemStateChanged
        int i = 0;
        Collection<Jogo> jogos = calendario.get(Jornada_ComboBox2.getSelectedItem().toString());
        for (Jogo j : jogos) {
            Jornadas_Table.setValueAt(j.getEquipa1(), i, 0);
            Jornadas_Table.setValueAt(j.getGolo1() + "X" + j.getGolo2(), i, 1);
            Jornadas_Table.setValueAt(j.getEquipa2(), i, 2);
            i++;
        }
    }//GEN-LAST:event_Equipa_ComboBoxItemStateChanged

    private void Escalao_ComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Escalao_ComboBox2ItemStateChanged
        // TODO add your handling code here: 
        Jornada_ComboBox2.removeAllItems();
        clearTable(Classificaçao_Table2);
        clearTable(MelhoresMarcadores_Table);
        clearTable(Jornadas_Table);
    }//GEN-LAST:event_Escalao_ComboBox2ItemStateChanged

    private void ConsultarTorneio_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarTorneio_ButtonActionPerformed
        int i=0;
        Collection<String> marcador = a.getMelhorMarcadores(Torneio_ComboBox.getSelectedItem().toString());
        if (marcador != null) {
            for (String b : marcador) {
                String[] c = b.split("_");
                MelhoresMarcadores_Table1.setValueAt(c[0], i, 0);
                MelhoresMarcadores_Table1.setValueAt(c[1], i, 1);
                MelhoresMarcadores_Table1.setValueAt(c[2], i, 2);
                i++;
            }
        }
        new ConsultarTorneio(Torneio_ComboBox.getSelectedItem().toString(), a).setVisible(true);
    }//GEN-LAST:event_ConsultarTorneio_ButtonActionPerformed

    private void Escalao_ComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Escalao_ComboBox3ActionPerformed
        // atualizar Torneio_ComboBox
        Torneio_ComboBox.removeAllItems();
        Collection <Competicao> competicoes = a.getDAOCompeticao().values();
        if (competicoes != null) {
            String escalao = "class Escalao." + Escalao_ComboBox3.getSelectedItem().toString();
            for(Competicao competicao: competicoes) {
                if (competicao instanceof Torneio && competicao.getEscalao().getClass().toString().equals(escalao))
                    Torneio_ComboBox.addItem(competicao.getNome());
            }
        }
    }//GEN-LAST:event_Escalao_ComboBox3ActionPerformed

    private void Torneio_ComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Torneio_ComboBoxItemStateChanged
        //Atualizar tabela melhores marcadores
    }//GEN-LAST:event_Torneio_ComboBoxItemStateChanged

    public static void clearTable(JTable table) {
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                table.setValueAt("", i, j);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Campeonato_Panel;
    private javax.swing.JLabel Classificaçao_Label2;
    private javax.swing.JTable Classificaçao_Table2;
    private javax.swing.JButton ConsultarTorneio_Button;
    private javax.swing.JLabel Consultar_Label;
    private javax.swing.JScrollPane DadosJogadores_Table;
    private javax.swing.JComboBox Equipa_ComboBox;
    private javax.swing.JLabel Equipa_Label;
    private javax.swing.JPanel Equipa_Panel;
    private javax.swing.JComboBox Escalao_ComboBox;
    private javax.swing.JComboBox Escalao_ComboBox2;
    private javax.swing.JComboBox Escalao_ComboBox3;
    private javax.swing.JLabel Escalao_Label;
    private javax.swing.JLabel Escalao_Label2;
    private javax.swing.JComboBox Escola_ComboBox;
    private javax.swing.JLabel Escola_Label;
    private javax.swing.JTable Jogadores_Table;
    private javax.swing.JComboBox Jornada_ComboBox2;
    private javax.swing.JLabel Jornada_Label2;
    private javax.swing.JTable Jornadas_Table;
    private javax.swing.JTable MelhoresMarcadores_Table;
    private javax.swing.JTable MelhoresMarcadores_Table1;
    private javax.swing.JButton Procurar_Button;
    private javax.swing.JPanel SelecionarEquipa_Panel;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JComboBox Torneio_ComboBox;
    private javax.swing.JPanel Torneio_Panel;
    private javax.swing.JButton VoltarMenuPrincipal_Button;
    private javax.swing.JPanel VoltarMenuPrincipal_Panel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton procura;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {

    }
}
